import { useNavigate } from "@remix-run/react"
import { EllipsisIcon } from "lucide-react"
import { Button } from "~/components/ui/button"
import {
  Popover,
  PopoverTrigger,
  PopoverContent,
} from "~/components/ui/popover"
import { Switch } from "~/components/ui/switch"
import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbSeparator,
} from "~/components/ui/breadcrumb"
import { useTranslation } from "~/hooks/use-translation" // 翻訳対応
import { SensitiveChangeModelConfirmDialog } from "~/routes/($lang)._main.models.$model/components/sensitive-change-model-confirm-dialog"

type Props = {
  name: string
  thumbnailImageURL: string | null
  isMoreRatings: boolean
  hasPrompt: boolean
  worksCount: number
}

export function AiModelHeader(props: Props) {
  const t = useTranslation()
  const navigate = useNavigate()

  return (
    <div className="flex flex-col space-y-4">
      <Breadcrumb>
        <BreadcrumbList>
          <BreadcrumbItem>
            <BreadcrumbLink href="/models">
              {t("モデル一覧", "Models List")}
            </BreadcrumbLink>
          </BreadcrumbItem>
          <BreadcrumbSeparator />
          <BreadcrumbItem>
            <BreadcrumbLink href={`/${props.name}`}>
              {props.name}
            </BreadcrumbLink>
          </BreadcrumbItem>
        </BreadcrumbList>
      </Breadcrumb>
      <div className="flex flex-col items-center justify-between space-y-4 rounded-lg md:flex-row md:space-x-4 md:space-y-0">
        <div className="flex items-center space-x-4">
          {props.thumbnailImageURL && (
            <img
              src={props.thumbnailImageURL}
              alt={props.name}
              className="h-12 w-12 rounded-md border border-gray-300 object-cover"
            />
          )}
          <div className="flex flex-col">
            <h1 className="font-semibold text-2xl">
              {t(
                `${props.name}で生成された作品一覧（${props.worksCount}件）`,
                `Works Generated by ${props.name} (${props.worksCount})`,
              )}
            </h1>
          </div>
        </div>
        <div className="flex space-x-2">
          <div className="flex items-center space-x-2">
            <Switch
              onClick={() => {
                navigate(
                  `/models/${props.name}?r15=${props.isMoreRatings ? "0" : "1"}&prompt=${props.hasPrompt ? "1" : "0"}`,
                )
              }}
              checked={props.isMoreRatings}
            />
            <span className="text-sm">{t("R15を表示", "Show R15")}</span>
          </div>
          <div className="flex items-center space-x-2">
            <Switch
              onClick={() => {
                navigate(
                  `/models/${props.name}?r15=${props.isMoreRatings ? "1" : "0"}&prompt=${props.hasPrompt ? "0" : "1"}`,
                )
              }}
              checked={props.hasPrompt}
            />
            <span className="text-sm">{t("プロンプト有", "With Prompts")}</span>
          </div>
          <Popover>
            <PopoverTrigger asChild>
              <Button size={"icon"} variant="secondary">
                <EllipsisIcon className="w-16" />
              </Button>
            </PopoverTrigger>
            <PopoverContent className="w-80">
              <div className="relative grid gap-4">
                <SensitiveChangeModelConfirmDialog name={props.name} />
              </div>
            </PopoverContent>
          </Popover>
        </div>
      </div>
    </div>
  )
}
